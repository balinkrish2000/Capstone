version: 2.1

# commands:
#   destroy-environment:
#     description: Destroy cloudformation stacks given a workflow ID.
#     steps:
#       - run:
#           name:
#           when: on_fail
#           command: |

jobs:
  build-app:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - restore_cache:
         keys: [app-build]
      - run:
         name: Install dependencies
         command: |
           sudo apt-get update
           sudo apt-get install -y nginx --no-install-recommends
      - run:
         name: copy project files
         command: |
            sudo cp ./config/nginx.conf /etc/nginx/nginx.conf
            sudo cp -r ./www /www
      - run:
         name: build app
         command: |
           sudo service nginx start
      - run:
         name: test app
         command: |
           curl http://localhost:80/
      - save_cache:
         paths: [node_modules]
         key: app-build
         
  lint-app:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
         name: install dependencies
         command: |
            docker pull hadolint/hadolint
      - run:
         name: lint on app
         command: |
            docker run --rm --interactive hadolint/hadolint < Dockerfile
            
  build-n-push-image:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - run:
         name: install curl
         command: |
            apk add --update curl
      - setup_remote_docker
      - run:
         name: build docker image
         command: |
            docker build --tag=capstone:${CIRCLE_WORKFLOW_ID:0:7} .
            docker image ls
      - run:
         name: run docker image
         command: |
            docker run --detach --publish=80:80 --name=captsone capstone:${CIRCLE_WORKFLOW_ID:0:7}
      - run:
         name: push to dockerhub
         command: |
            docker login -u balinkrish2000 -p 4e57c8ff-c3df-4820-a380-9d3762b3b433
            docker tag capstone:${CIRCLE_WORKFLOW_ID:0:7} balinkrish2000/capstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker push balinkrish2000/capstone:${CIRCLE_WORKFLOW_ID:0:7}

  create-eks-cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Get Previous Workflow ID
          command: |
            aws cloudformation \
              list-exports --query "Exports[?Name==\`WorkflowID\`].Value" \
              --no-paginate --output text >> .circleci/files/prevworkflow.txt
            cat .circleci/files/prevworkflow.txt
      - run:
         name: create eks cluster
         command: |
            aws cloudformation deploy \
              --template-file .circleci/files/ekscluster.yml \
              --tags project=capstone \
              --stack-name "capstone-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides WorkflowID=${CIRCLE_WORKFLOW_ID:0:7}
         no_output_timeout: 20m
         
  deploy-app-to-cluster:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
         name: install dependencies
         command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
      - run:
         name: configure kube
         command: |
            aws eks update-kubeconfig --name capstone
      - run:
         name: Deploy App
         command: |
            kubectl get nodes
            kubectl create deploy capstone-${CIRCLE_WORKFLOW_ID:0:7} --image=balinkrish2000/capstone:8b8a18b
      - run:
         name: check deployment status
         command: |
            kubectl get deploy,rs,svc,pods
      - run:
         name: describe pods
         command: |
            kubectl describe pods
    
  verify-app-deployment:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
         name: install dependencies
         command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
      - run:
         name: configure kube
         command: |
            aws eks update-kubeconfig --name capstone
            kubectl get pods
            kubectl describe pods
    
            
workflows:
  default:
    jobs:
    #   - build-app
    #   - lint-app
    #   - build-n-push-image:
    #       requires: [build-app, lint-app]
    #   - create-eks-cluster
    #   - deploy-app-to-cluster
        - verify-app-deployment